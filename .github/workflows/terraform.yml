name: 'Terraform CI/CD'

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  AWS_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "423623847730"
  ECR_REPOSITORY_WEB: "web-service"
  ECR_REPOSITORY_OLLAMA: "ollama"
  ECS_CLUSTER: "ecs-cluster"
  ECS_SERVICE_FRONTEND: "ecs-cluster-frontend-service"
  ECS_SERVICE_OLLAMA: "ecs-cluster-ollama-service"
  ECS_SERVICE_PROMETHEUS: "ecs-cluster-prometheus-service"
  ECS_SERVICE_GRAFANA: "ecs-cluster-grafana-service"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.7.0"

    - name: Cache Terraform
      uses: actions/cache@v4
      with:
        path: |
          .terraform
          .terraform.lock.hcl
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf', '**/*.tfvars') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::423623847730:role/ecsGitHubActionsRole
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check -recursive

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
      run: terraform apply -auto-approve -input=false

  build-and-push:
    name: 'Build and Push Docker Images'
    runs-on: ubuntu-latest
    needs: terraform
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::423623847730:role/ecsGitHubActionsRole
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push web-service image
      uses: docker/build-push-action@v5
      with:
        context: ./app/frontend
        file: ./app/frontend/Dockerfile
        push: true
        tags: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_WEB }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push ollama image
      uses: docker/build-push-action@v5
      with:
        context: ./app/ollama
        file: ./app/ollama/Dockerfile
        push: true
        tags: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_OLLAMA }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    name: 'Deploy to ECS'
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::423623847730:role/ecsGitHubActionsRole
        aws-region: ${{ env.AWS_REGION }}

    - name: Restart ECS services
      run: |
        aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE_FRONTEND }} --force-new-deployment
        aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE_OLLAMA }} --force-new-deployment
        aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE_PROMETHEUS }} --force-new-deployment
        aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE_GRAFANA }} --force-new-deployment